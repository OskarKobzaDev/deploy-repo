on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Clone fresh repo with submodules
      run: |
        rm -rf /home/oskar/var/www/deploy-repo
        git clone --recurse-submodules git@github.com:OskarKobzaDev/deploy-repo.git /home/oskar/var/www/deploy-repo

    - name: Copy .env files
      run: |
        cp /home/oskar/var/www/deploy-repo/prod_My_Resume/.env.prod.example /home/oskar/var/www/deploy-repo/prod_My_Resume/.env
        cp /home/oskar/var/www/deploy-repo/StoryTime/.env.prod.example /home/oskar/var/www/deploy-repo/StoryTime/.env

    - name: Uzupełnij środowisko dla modułów
      run: |
        export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
        export REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"
        export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"

        cd /home/oskar/var/www/deploy-repo/prod_My_Resume
        sed -i "s#DB_PASSWORD=.*#DB_PASSWORD=${DB_PASSWORD}#" .env
        sed -i "s#REDIS_PASSWORD=.*#REDIS_PASSWORD=${REDIS_PASSWORD}#" .env
        sed -i "s#MAIL_PASSWORD=.*#MAIL_PASSWORD=${MAIL_PASSWORD}#" .env

        cd /home/oskar/var/www/deploy-repo/StoryTime
        sed -i "s#DB_PASSWORD=.*#DB_PASSWORD=${DB_PASSWORD}#" .env
        sed -i "s#REDIS_PASSWORD=.*#REDIS_PASSWORD=${REDIS_PASSWORD}#" .env
        sed -i "s#MAIL_PASSWORD=.*#MAIL_PASSWORD=${MAIL_PASSWORD}#" .env

    - name: Stop and clean containers
      run: |
        docker-compose down all --volumes --remove-orphans
    - name: Stop and clean containers
      run: |
        docker-compose up -d --build
        
    # - name: Install composer dependencies
    #   run: |
    #     docker run --rm -v $PWD/prod_My_Resume:/app composer install --working-dir=/app --no-interaction --optimize-autoloader --no-dev
    #     docker run --rm -v $PWD/StoryTime:/app composer install --working-dir=/app --no-interaction --optimize-autoloader --no-dev

    # - name: Install npm dependencies and build
    #   run: |
    #     docker run --rm -v $PWD/prod_My_Resume:/app -w /app node:22-alpine sh -c "npm install && npm run build"
    #     docker run --rm -v $PWD/StoryTime:/app -w /app node:22-alpine sh -c "npm install && npm run build"

    # - name: Run database migrations
    #   run: |
    #     docker compose run --rm artisan_resume migrate --force
    #     docker compose run --rm artisan_storytime migrate --force

    # - name: Build and start containers
    #   run: |
    #     docker compose up -d --build
